{"version":3,"file":"useUsers-97bd0013.js","sources":["../../node_modules/vuestic-ui/dist/es/src/components/va-data-table/fabrics.js","../../src/pages/users/widgets/UserAvatar.vue","../../src/data/pages/projects.ts","../../src/pages/projects/composables/useProjects.ts","../../src/data/pages/users.ts","../../src/pages/users/composables/useUsers.ts"],"sourcesContent":["const defineVaDataTableColumns = (columns) => columns;\nconst defineVaDataTableItems = (items) => items;\nexport {\n  defineVaDataTableItems as a,\n  defineVaDataTableColumns as d\n};\n//# sourceMappingURL=fabrics.js.map\n","<script setup lang=\"ts\">\nimport { PropType } from 'vue'\nimport { User } from '../types'\n\nconst avatarColor = (userName: string) => {\n  const colors = ['primary', '#FFD43A', '#ADFF00', '#262824', 'danger']\n  const index = userName.charCodeAt(0) % colors.length\n  return colors[index]\n}\n\ndefineProps({\n  user: {\n    type: Object as PropType<User>,\n    required: true,\n  },\n  size: {\n    type: String,\n    default: 'medium',\n  },\n})\n\nconst isUrl = (avatar: string) => {\n  return avatar.startsWith('http') || avatar.startsWith('blob:')\n}\n</script>\n\n<template>\n  <VaAvatar\n    :size=\"size\"\n    :src=\"isUrl(user.avatar) ? user.avatar : ''\"\n    :fallback-text=\"user.avatar || user.fullname[0]\"\n    :color=\"avatarColor(user.fullname)\"\n  />\n</template>\n","import { sleep } from '../../services/utils'\nimport projectsDb from './projects-db.json'\nimport usersDb from './users-db.json'\n\n// Simulate API calls\nexport type Pagination = {\n  page: number\n  perPage: number\n  total: number\n}\n\nexport type Sorting = {\n  sortBy: keyof (typeof projectsDb)[number] | undefined\n  sortingOrder: 'asc' | 'desc' | null\n}\n\nconst getSortItem = (obj: any, sortBy: keyof (typeof projectsDb)[number]) => {\n  if (sortBy === 'project_owner') {\n    return obj.project_owner.fullname\n  }\n\n  if (sortBy === 'team') {\n    return obj.team.map((user: any) => user.fullname).join(', ')\n  }\n\n  if (sortBy === 'creation_date') {\n    return new Date(obj[sortBy])\n  }\n\n  return obj[sortBy]\n}\n\nexport const getProjects = async (options: Sorting & Pagination) => {\n  await sleep(1000)\n\n  const projects = projectsDb.map((project) => ({\n    ...project,\n    project_owner: usersDb.find((user) => user.id === project.project_owner)! as (typeof usersDb)[number],\n    team: usersDb.filter((user) => project.team.includes(user.id)) as (typeof usersDb)[number][],\n  }))\n\n  if (options.sortBy && options.sortingOrder) {\n    projects.sort((a, b) => {\n      a = getSortItem(a, options.sortBy!)\n      b = getSortItem(b, options.sortBy!)\n      if (a < b) {\n        return options.sortingOrder === 'asc' ? -1 : 1\n      }\n      if (a > b) {\n        return options.sortingOrder === 'asc' ? 1 : -1\n      }\n      return 0\n    })\n  }\n\n  const normalizedProjects = projects.slice((options.page - 1) * options.perPage, options.page * options.perPage)\n\n  return {\n    data: normalizedProjects,\n    pagination: {\n      page: options.page,\n      perPage: options.perPage,\n      total: projectsDb.length,\n    },\n  }\n}\n\nexport const addProject = async (project: Omit<(typeof projectsDb)[number], 'id' | 'creation_date'>) => {\n  await sleep(1000)\n\n  const newProject = {\n    ...project,\n    id: projectsDb.length + 1,\n    creation_date: new Date().toLocaleDateString('gb', { day: 'numeric', month: 'short', year: 'numeric' }),\n  }\n\n  projectsDb.push(newProject)\n\n  return {\n    ...newProject,\n    project_owner: usersDb.find((user) => user.id === project.project_owner)! as (typeof usersDb)[number],\n    team: usersDb.filter((user) => project.team.includes(user.id)) as (typeof usersDb)[number][],\n  }\n}\n\nexport const updateProject = async (project: (typeof projectsDb)[number]) => {\n  await sleep(1000)\n\n  const index = projectsDb.findIndex((p) => p.id === project.id)\n  projectsDb[index] = project\n\n  return project\n}\n\nexport const removeProject = async (project: (typeof projectsDb)[number]) => {\n  await sleep(1000)\n\n  const index = projectsDb.findIndex((p) => p.id === project.id)\n  projectsDb.splice(index, 1)\n\n  return project\n}\n","import { Ref, ref, unref } from 'vue'\nimport {\n  getProjects,\n  addProject,\n  updateProject,\n  removeProject,\n  Sorting,\n  Pagination,\n} from '../../../data/pages/projects'\nimport { Project } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'creation_date', sortingOrder: 'desc' })\n\nexport const useProjects = (options?: { sorting?: Ref<Sorting>; pagination?: Ref<Pagination> }) => {\n  const isLoading = ref(false)\n  const projects = ref<Project[]>([])\n\n  const { sorting = makeSortingRef(), pagination = makePaginationRef() } = options ?? {}\n\n  const fetch = async () => {\n    isLoading.value = true\n    const { data, pagination: newPagination } = await getProjects({\n      ...unref(sorting),\n      ...unref(pagination),\n    })\n    projects.value = data as Project[]\n\n    ignoreUpdates(() => {\n      pagination.value = newPagination\n    })\n\n    isLoading.value = false\n  }\n\n  const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n  fetch()\n\n  return {\n    isLoading,\n\n    projects,\n\n    fetch,\n\n    async add(project: Omit<Project, 'id' | 'creation_date'>) {\n      isLoading.value = true\n      await addProject({\n        ...project,\n        project_owner: project.project_owner.id,\n        team: project.team.map((user) => user.id),\n      })\n      await fetch()\n      isLoading.value = false\n    },\n\n    async update(project: Project) {\n      isLoading.value = true\n      await updateProject({\n        ...project,\n        project_owner: project.project_owner.id,\n        team: project.team.map((user) => user.id),\n      })\n      await fetch()\n      isLoading.value = false\n    },\n\n    async remove(project: Project) {\n      isLoading.value = true\n      await removeProject({\n        ...project,\n        project_owner: project.project_owner.id,\n        team: project.team.map((user) => user.id),\n      })\n      await fetch()\n      isLoading.value = false\n    },\n\n    pagination,\n    sorting,\n  }\n}\n","import { sleep } from '../../services/utils'\nimport { User } from './../../pages/users/types'\nimport usersDb from './users-db.json'\nimport projectsDb from './projects-db.json'\nimport { Project } from '../../pages/projects/types'\n\nexport const users = usersDb as User[]\n\nconst getUserProjects = (userId: number | string) => {\n  return projectsDb\n    .filter((project) => project.team.includes(Number(userId)))\n    .map((project) => ({\n      ...project,\n      project_owner: users.find((user) => user.id === project.project_owner)!,\n      team: project.team.map((userId) => users.find((user) => user.id === userId)!),\n      status: project.status as Project['status'],\n    }))\n}\n\n// Simulate API calls\n\nexport type Pagination = {\n  page: number\n  perPage: number\n  total: number\n}\n\nexport type Sorting = {\n  sortBy: keyof User | undefined\n  sortingOrder: 'asc' | 'desc' | null\n}\n\nexport type Filters = {\n  isActive: boolean\n  search: string\n}\n\nconst getSortItem = (obj: any, sortBy: string) => {\n  if (sortBy === 'projects') {\n    return obj.projects.map((project: any) => project.project_name).join(', ')\n  }\n\n  return obj[sortBy]\n}\n\nexport const getUsers = async (filters: Partial<Filters & Pagination & Sorting>) => {\n  await sleep(1000)\n  const { isActive, search, sortBy, sortingOrder } = filters\n  let filteredUsers = users\n\n  filteredUsers = filteredUsers.filter((user) => user.active === isActive)\n\n  if (search) {\n    filteredUsers = filteredUsers.filter((user) => user.fullname.toLowerCase().includes(search.toLowerCase()))\n  }\n\n  filteredUsers = filteredUsers.map((user) => ({ ...user, projects: getUserProjects(user.id) }))\n\n  if (sortBy && sortingOrder) {\n    filteredUsers = filteredUsers.sort((a, b) => {\n      const first = getSortItem(a, sortBy)\n      const second = getSortItem(b, sortBy)\n      if (first > second) {\n        return sortingOrder === 'asc' ? 1 : -1\n      }\n      if (first < second) {\n        return sortingOrder === 'asc' ? -1 : 1\n      }\n      return 0\n    })\n  }\n\n  const { page = 1, perPage = 10 } = filters || {}\n  return {\n    data: filteredUsers.slice((page - 1) * perPage, page * perPage),\n    pagination: {\n      page,\n      perPage,\n      total: filteredUsers.length,\n    },\n  }\n}\n\nexport const addUser = async (user: User) => {\n  await sleep(1000)\n  users.unshift(user)\n}\n\nexport const updateUser = async (user: User) => {\n  await sleep(1000)\n  const index = users.findIndex((u) => u.id === user.id)\n  users[index] = user\n}\n\nexport const removeUser = async (user: User) => {\n  await sleep(1000)\n  users.splice(\n    users.findIndex((u) => u.id === user.id),\n    1,\n  )\n}\n","import { Ref, ref, unref, watch } from 'vue'\nimport { getUsers, updateUser, addUser, removeUser, type Filters, Pagination, Sorting } from '../../../data/pages/users'\nimport { User } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'fullname', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ isActive: true, search: '' })\n\nexport const useUsers = (options?: {\n  pagination?: Ref<Pagination>\n  sorting?: Ref<Sorting>\n  filters?: Ref<Partial<Filters>>\n}) => {\n  const isLoading = ref(false)\n  const users = ref<User[]>([])\n\n  const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n  const fetch = async () => {\n    isLoading.value = true\n    const { data, pagination: newPagination } = await getUsers({\n      ...unref(filters),\n      ...unref(sorting),\n      ...unref(pagination),\n    })\n    users.value = data\n\n    ignoreUpdates(() => {\n      pagination.value = newPagination\n    })\n\n    isLoading.value = false\n  }\n\n  const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n  watch(\n    filters,\n    () => {\n      // Reset pagination to first page when filters changed\n      pagination.value.page = 1\n      fetch()\n    },\n    { deep: true },\n  )\n\n  fetch()\n\n  return {\n    isLoading,\n\n    filters,\n    sorting,\n    pagination,\n\n    users,\n\n    fetch,\n\n    async add(user: User) {\n      isLoading.value = true\n      await addUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async update(user: User) {\n      isLoading.value = true\n      await updateUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async remove(user: User) {\n      isLoading.value = true\n      await removeUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n  }\n}\n"],"names":["defineVaDataTableColumns","columns","avatarColor","userName","colors","index","isUrl","avatar","getSortItem","obj","sortBy","user","getProjects","options","sleep","projects","projectsDb","project","usersDb","a","b","addProject","newProject","updateProject","p","removeProject","makePaginationRef","ref","makeSortingRef","useProjects","isLoading","sorting","pagination","fetch","data","newPagination","unref","ignoreUpdates","watchIgnorable","users","getUserProjects","userId","getUsers","filters","isActive","search","sortingOrder","filteredUsers","first","second","page","perPage","addUser","updateUser","u","removeUser","makeFiltersRef","useUsers","watch"],"mappings":"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","x_google_ignoreList":[0]}